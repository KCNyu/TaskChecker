name: Publish

on:
  push:
    tags:
      - v*

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
          include:
            - os: ubuntu-latest
              artifact_name: UnixTaskbook-Linux-x86_64
            - os: macos-latest
              artifact_name: UnixTaskbook-Darwin-x86_64

    steps:
    
    - uses: actions/checkout@v3

    - name: Configure tbb
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libtbb-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} && ./publish.sh && ls

    - name: Upload pakage to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.artifact_name }}.tar.gz
        asset_name: ${{ matrix.artifact_name }}.tar.gz
        tag: ${{ github.ref }}

    - name: Upload install script to release
      if: matrix.os == 'ubuntu-latest'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: install.sh
        asset_name: install.sh
        tag: ${{ github.ref }}
        
    - name: Upload uninstall script to release
      if: matrix.os == 'ubuntu-latest'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: uninstall.sh
        asset_name: uninstall.sh
        tag: ${{ github.ref }}